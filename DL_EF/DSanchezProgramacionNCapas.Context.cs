//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL_EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DSanchezProgramacionNCapasEntities : DbContext
    {
        public DSanchezProgramacionNCapasEntities()
            : base("name=DSanchezProgramacionNCapasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Rol> Rols { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
        public virtual DbSet<Colonia> Colonias { get; set; }
        public virtual DbSet<Estado> Estadoes { get; set; }
        public virtual DbSet<Municipio> Municipios { get; set; }
        public virtual DbSet<Direccion> Direccions { get; set; }
        public virtual DbSet<BusquedaAbiertaView> BusquedaAbiertaViews { get; set; }
        public virtual DbSet<BolsaTrabajo> BolsaTrabajoes { get; set; }
        public virtual DbSet<Candidato> Candidatoes { get; set; }
        public virtual DbSet<Carrera> Carreras { get; set; }
        public virtual DbSet<EstatusVacante> EstatusVacantes { get; set; }
        public virtual DbSet<Universidad> Universidads { get; set; }
        public virtual DbSet<Vacante> Vacantes { get; set; }
        public virtual DbSet<Cita> Citas { get; set; }
        public virtual DbSet<EstatusCita> EstatusCitas { get; set; }
        public virtual DbSet<Piso> Pisoes { get; set; }
        public virtual DbSet<Promedio> Promedios { get; set; }
        public virtual DbSet<Empresa> Empresas { get; set; }
        public virtual DbSet<EmpresaDireccion> EmpresaDireccions { get; set; }
        public virtual DbSet<Empleado> Empleadoes { get; set; }
    
        public virtual ObjectResult<ColoniaGetByIdMunicipio_Result> ColoniaGetByIdMunicipio(Nullable<int> idMunicipio)
        {
            var idMunicipioParameter = idMunicipio.HasValue ?
                new ObjectParameter("IdMunicipio", idMunicipio) :
                new ObjectParameter("IdMunicipio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ColoniaGetByIdMunicipio_Result>("ColoniaGetByIdMunicipio", idMunicipioParameter);
        }
    
        public virtual ObjectResult<MunicipioGetByIdEstado_Result> MunicipioGetByIdEstado(Nullable<int> idEstado)
        {
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MunicipioGetByIdEstado_Result>("MunicipioGetByIdEstado", idEstadoParameter);
        }
    
        public virtual int UsuarioUpdate(Nullable<int> idUsuario, string nombre, string apellidoPaterno, string apellidoMaterno, string telefono, string email, string userName, string password, string sexo, string celular, string fechaNacimiento, string curp, Nullable<int> idRol, byte[] imageUser, string calle, string numeroInterior, string numeroExterior, Nullable<int> idColonia)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento != null ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(string));
    
            var curpParameter = curp != null ?
                new ObjectParameter("Curp", curp) :
                new ObjectParameter("Curp", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            var imageUserParameter = imageUser != null ?
                new ObjectParameter("ImageUser", imageUser) :
                new ObjectParameter("ImageUser", typeof(byte[]));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var numeroInteriorParameter = numeroInterior != null ?
                new ObjectParameter("NumeroInterior", numeroInterior) :
                new ObjectParameter("NumeroInterior", typeof(string));
    
            var numeroExteriorParameter = numeroExterior != null ?
                new ObjectParameter("NumeroExterior", numeroExterior) :
                new ObjectParameter("NumeroExterior", typeof(string));
    
            var idColoniaParameter = idColonia.HasValue ?
                new ObjectParameter("IdColonia", idColonia) :
                new ObjectParameter("IdColonia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsuarioUpdate", idUsuarioParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, telefonoParameter, emailParameter, userNameParameter, passwordParameter, sexoParameter, celularParameter, fechaNacimientoParameter, curpParameter, idRolParameter, imageUserParameter, calleParameter, numeroInteriorParameter, numeroExteriorParameter, idColoniaParameter);
        }
    
        public virtual int UsuarioDelete(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsuarioDelete", idUsuarioParameter);
        }
    
        public virtual ObjectResult<UsuarioByID_Result> UsuarioByID(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsuarioByID_Result>("UsuarioByID", idUsuarioParameter);
        }
    
        public virtual int CambioStatus(Nullable<int> idUsuario, Nullable<bool> status)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambioStatus", idUsuarioParameter, statusParameter);
        }
    
        public virtual ObjectResult<UsuarioGetAll_Result> UsuarioGetAll(string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<int> idRol)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsuarioGetAll_Result>("UsuarioGetAll", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, idRolParameter);
        }
    
        public virtual int UsuarioAdd(string nombre, string apellidoPaterno, string apellidoMaterno, string telefono, string email, string userName, string password, string sexo, string celular, string fechaNacimiento, string curp, Nullable<int> idRol, byte[] imageUser, string calle, string numeroInterior, string numeroExterior, Nullable<int> idColonia)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento != null ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(string));
    
            var curpParameter = curp != null ?
                new ObjectParameter("Curp", curp) :
                new ObjectParameter("Curp", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            var imageUserParameter = imageUser != null ?
                new ObjectParameter("ImageUser", imageUser) :
                new ObjectParameter("ImageUser", typeof(byte[]));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var numeroInteriorParameter = numeroInterior != null ?
                new ObjectParameter("NumeroInterior", numeroInterior) :
                new ObjectParameter("NumeroInterior", typeof(string));
    
            var numeroExteriorParameter = numeroExterior != null ?
                new ObjectParameter("NumeroExterior", numeroExterior) :
                new ObjectParameter("NumeroExterior", typeof(string));
    
            var idColoniaParameter = idColonia.HasValue ?
                new ObjectParameter("IdColonia", idColonia) :
                new ObjectParameter("IdColonia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsuarioAdd", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, telefonoParameter, emailParameter, userNameParameter, passwordParameter, sexoParameter, celularParameter, fechaNacimientoParameter, curpParameter, idRolParameter, imageUserParameter, calleParameter, numeroInteriorParameter, numeroExteriorParameter, idColoniaParameter);
        }
    
        public virtual ObjectResult<EstadoGetAll_Result> EstadoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EstadoGetAll_Result>("EstadoGetAll");
        }
    
        public virtual int UsuarioGetAllSqlDinamico(string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<int> idRol)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsuarioGetAllSqlDinamico", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, idRolParameter);
        }
    
        public virtual int CandidatoDelete(Nullable<int> idCandidato)
        {
            var idCandidatoParameter = idCandidato.HasValue ?
                new ObjectParameter("IdCandidato", idCandidato) :
                new ObjectParameter("IdCandidato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CandidatoDelete", idCandidatoParameter);
        }
    
        public virtual ObjectResult<CandidatoGetAll_Result> CandidatoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CandidatoGetAll_Result>("CandidatoGetAll");
        }
    
        public virtual ObjectResult<CandidatoGetById_Result> CandidatoGetById(Nullable<int> idCandidato)
        {
            var idCandidatoParameter = idCandidato.HasValue ?
                new ObjectParameter("IdCandidato", idCandidato) :
                new ObjectParameter("IdCandidato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CandidatoGetById_Result>("CandidatoGetById", idCandidatoParameter);
        }
    
        public virtual ObjectResult<CandidatoGetByVacante_Result> CandidatoGetByVacante(Nullable<int> idVacante)
        {
            var idVacanteParameter = idVacante.HasValue ?
                new ObjectParameter("IdVacante", idVacante) :
                new ObjectParameter("IdVacante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CandidatoGetByVacante_Result>("CandidatoGetByVacante", idVacanteParameter);
        }
    
        public virtual int CitaAdd(Nullable<System.DateTime> fechaHora, Nullable<byte> idPiso, Nullable<int> idCandidato, Nullable<byte> idEstatusCita, string uRL)
        {
            var fechaHoraParameter = fechaHora.HasValue ?
                new ObjectParameter("FechaHora", fechaHora) :
                new ObjectParameter("FechaHora", typeof(System.DateTime));
    
            var idPisoParameter = idPiso.HasValue ?
                new ObjectParameter("IdPiso", idPiso) :
                new ObjectParameter("IdPiso", typeof(byte));
    
            var idCandidatoParameter = idCandidato.HasValue ?
                new ObjectParameter("IdCandidato", idCandidato) :
                new ObjectParameter("IdCandidato", typeof(int));
    
            var idEstatusCitaParameter = idEstatusCita.HasValue ?
                new ObjectParameter("IdEstatusCita", idEstatusCita) :
                new ObjectParameter("IdEstatusCita", typeof(byte));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CitaAdd", fechaHoraParameter, idPisoParameter, idCandidatoParameter, idEstatusCitaParameter, uRLParameter);
        }
    
        public virtual ObjectResult<CitaGetByIdCandidato_Result> CitaGetByIdCandidato(Nullable<int> idCandidato)
        {
            var idCandidatoParameter = idCandidato.HasValue ?
                new ObjectParameter("IdCandidato", idCandidato) :
                new ObjectParameter("IdCandidato", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CitaGetByIdCandidato_Result>("CitaGetByIdCandidato", idCandidatoParameter);
        }
    
        public virtual int CitaUpdate(Nullable<int> idCita, Nullable<System.DateTime> fechaHora, Nullable<byte> idPiso, Nullable<int> idCandidato, Nullable<byte> idEstatusCita, string uRL)
        {
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var fechaHoraParameter = fechaHora.HasValue ?
                new ObjectParameter("FechaHora", fechaHora) :
                new ObjectParameter("FechaHora", typeof(System.DateTime));
    
            var idPisoParameter = idPiso.HasValue ?
                new ObjectParameter("IdPiso", idPiso) :
                new ObjectParameter("IdPiso", typeof(byte));
    
            var idCandidatoParameter = idCandidato.HasValue ?
                new ObjectParameter("IdCandidato", idCandidato) :
                new ObjectParameter("IdCandidato", typeof(int));
    
            var idEstatusCitaParameter = idEstatusCita.HasValue ?
                new ObjectParameter("IdEstatusCita", idEstatusCita) :
                new ObjectParameter("IdEstatusCita", typeof(byte));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CitaUpdate", idCitaParameter, fechaHoraParameter, idPisoParameter, idCandidatoParameter, idEstatusCitaParameter, uRLParameter);
        }
    
        public virtual int CandidatoUpdate(Nullable<int> idCandidato, string nombre, string apellidoPaterno, string apellidoMaterno, string edad, string correo, string telefono, string direccion, byte[] foto, byte[] curriculum, Nullable<int> idUniversidad, Nullable<int> idCarrera, Nullable<int> idBolsaTrabajo, Nullable<int> idVacante)
        {
            var idCandidatoParameter = idCandidato.HasValue ?
                new ObjectParameter("IdCandidato", idCandidato) :
                new ObjectParameter("IdCandidato", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var edadParameter = edad != null ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("Foto", foto) :
                new ObjectParameter("Foto", typeof(byte[]));
    
            var curriculumParameter = curriculum != null ?
                new ObjectParameter("Curriculum", curriculum) :
                new ObjectParameter("Curriculum", typeof(byte[]));
    
            var idUniversidadParameter = idUniversidad.HasValue ?
                new ObjectParameter("IdUniversidad", idUniversidad) :
                new ObjectParameter("IdUniversidad", typeof(int));
    
            var idCarreraParameter = idCarrera.HasValue ?
                new ObjectParameter("IdCarrera", idCarrera) :
                new ObjectParameter("IdCarrera", typeof(int));
    
            var idBolsaTrabajoParameter = idBolsaTrabajo.HasValue ?
                new ObjectParameter("IdBolsaTrabajo", idBolsaTrabajo) :
                new ObjectParameter("IdBolsaTrabajo", typeof(int));
    
            var idVacanteParameter = idVacante.HasValue ?
                new ObjectParameter("IdVacante", idVacante) :
                new ObjectParameter("IdVacante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CandidatoUpdate", idCandidatoParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, edadParameter, correoParameter, telefonoParameter, direccionParameter, fotoParameter, curriculumParameter, idUniversidadParameter, idCarreraParameter, idBolsaTrabajoParameter, idVacanteParameter);
        }
    
        public virtual int CandidatoAdd(string nombre, string apellidoPaterno, string apellidoMaterno, string edad, string correo, string telefono, string direccion, byte[] foto, byte[] curriculum, Nullable<int> idUniversidad, Nullable<int> idCarrera, Nullable<int> idBolsaTrabajo, Nullable<int> idVacante)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var edadParameter = edad != null ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("Foto", foto) :
                new ObjectParameter("Foto", typeof(byte[]));
    
            var curriculumParameter = curriculum != null ?
                new ObjectParameter("Curriculum", curriculum) :
                new ObjectParameter("Curriculum", typeof(byte[]));
    
            var idUniversidadParameter = idUniversidad.HasValue ?
                new ObjectParameter("IdUniversidad", idUniversidad) :
                new ObjectParameter("IdUniversidad", typeof(int));
    
            var idCarreraParameter = idCarrera.HasValue ?
                new ObjectParameter("IdCarrera", idCarrera) :
                new ObjectParameter("IdCarrera", typeof(int));
    
            var idBolsaTrabajoParameter = idBolsaTrabajo.HasValue ?
                new ObjectParameter("IdBolsaTrabajo", idBolsaTrabajo) :
                new ObjectParameter("IdBolsaTrabajo", typeof(int));
    
            var idVacanteParameter = idVacante.HasValue ?
                new ObjectParameter("IdVacante", idVacante) :
                new ObjectParameter("IdVacante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CandidatoAdd", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, edadParameter, correoParameter, telefonoParameter, direccionParameter, fotoParameter, curriculumParameter, idUniversidadParameter, idCarreraParameter, idBolsaTrabajoParameter, idVacanteParameter);
        }
    
        public virtual ObjectResult<EmpresaGetAll_Result> EmpresaGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmpresaGetAll_Result>("EmpresaGetAll");
        }
    
        public virtual int EmpresaAdd(string nombreEmpresa, string latitud, string longitud)
        {
            var nombreEmpresaParameter = nombreEmpresa != null ?
                new ObjectParameter("NombreEmpresa", nombreEmpresa) :
                new ObjectParameter("NombreEmpresa", typeof(string));
    
            var latitudParameter = latitud != null ?
                new ObjectParameter("Latitud", latitud) :
                new ObjectParameter("Latitud", typeof(string));
    
            var longitudParameter = longitud != null ?
                new ObjectParameter("Longitud", longitud) :
                new ObjectParameter("Longitud", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpresaAdd", nombreEmpresaParameter, latitudParameter, longitudParameter);
        }
    
        public virtual ObjectResult<EmpresaGetById_Result> EmpresaGetById(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmpresaGetById_Result>("EmpresaGetById", idEmpresaParameter);
        }
    
        public virtual int EmpresaUpdate(Nullable<int> idEmpresa, string nombreEmpresa, string latitud, string longitud)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var nombreEmpresaParameter = nombreEmpresa != null ?
                new ObjectParameter("NombreEmpresa", nombreEmpresa) :
                new ObjectParameter("NombreEmpresa", typeof(string));
    
            var latitudParameter = latitud != null ?
                new ObjectParameter("Latitud", latitud) :
                new ObjectParameter("Latitud", typeof(string));
    
            var longitudParameter = longitud != null ?
                new ObjectParameter("Longitud", longitud) :
                new ObjectParameter("Longitud", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpresaUpdate", idEmpresaParameter, nombreEmpresaParameter, latitudParameter, longitudParameter);
        }
    
        public virtual int EmpresaDelete(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpresaDelete", idEmpresaParameter);
        }
    
        public virtual int ObtenerClientes(string filtro, Nullable<int> pagina, Nullable<int> registrosPorPagina)
        {
            var filtroParameter = filtro != null ?
                new ObjectParameter("Filtro", filtro) :
                new ObjectParameter("Filtro", typeof(string));
    
            var paginaParameter = pagina.HasValue ?
                new ObjectParameter("Pagina", pagina) :
                new ObjectParameter("Pagina", typeof(int));
    
            var registrosPorPaginaParameter = registrosPorPagina.HasValue ?
                new ObjectParameter("RegistrosPorPagina", registrosPorPagina) :
                new ObjectParameter("RegistrosPorPagina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ObtenerClientes", filtroParameter, paginaParameter, registrosPorPaginaParameter);
        }
    
        public virtual ObjectResult<EmpleadoGetAll_Result> EmpleadoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmpleadoGetAll_Result>("EmpleadoGetAll");
        }
    
        public virtual int EmpleadoAdd(string rFC, string numeroEmpleado, string nombre, Nullable<System.DateTime> fechaControl, Nullable<decimal> salario)
        {
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            var numeroEmpleadoParameter = numeroEmpleado != null ?
                new ObjectParameter("NumeroEmpleado", numeroEmpleado) :
                new ObjectParameter("NumeroEmpleado", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var fechaControlParameter = fechaControl.HasValue ?
                new ObjectParameter("FechaControl", fechaControl) :
                new ObjectParameter("FechaControl", typeof(System.DateTime));
    
            var salarioParameter = salario.HasValue ?
                new ObjectParameter("Salario", salario) :
                new ObjectParameter("Salario", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpleadoAdd", rFCParameter, numeroEmpleadoParameter, nombreParameter, fechaControlParameter, salarioParameter);
        }
    }
}
